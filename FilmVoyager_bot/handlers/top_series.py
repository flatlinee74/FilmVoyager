# handlers/top_series.py

from aiogram import Router, types
from database.db import get_movies_connection
from database.queries import GET_TOP_100_SERIES
router = Router()

@router.message(lambda message: message.text == "üì∫ –¢–æ–ø-100 —Å–µ—Ä–∏–∞–ª–æ–≤")
async def show_top_50_series(message: types.Message):
    print("–ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å –Ω–∞ –≤—ã–≤–æ–¥ —Ç–æ–ø-100 —Å–µ—Ä–∏–∞–ª–æ–≤")

    with get_movies_connection() as conn:
        cur = conn.cursor()
        cur.execute(GET_TOP_100_SERIES)
        series_list = cur.fetchall()

    if not series_list:
        await message.answer("–°–µ—Ä–∏–∞–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.")
        return

    text = "<b>üì∫ –¢–æ–ø-100 —Å–µ—Ä–∏–∞–ª–æ–≤ –ø–æ —Ä–µ–π—Ç–∏–Ω–≥—É:</b>\n\n"
    for i, serie in enumerate(series_list, start=1):
        title, year, rating = serie
        text += f"{i}. <b>{title}</b>\n   –ì–æ–¥: {year}, –†–µ–π—Ç–∏–Ω–≥: ‚≠ê{rating}\n\n"

    # Telegram –ø–æ–∑–≤–æ–ª—è–µ—Ç –¥–æ 4096 —Å–∏–º–≤–æ–ª–æ–≤ –∑–∞ —Ä–∞–∑
    max_length = 4096
    messages_text = [text[i:i + max_length] for i in range(0, len(text), max_length)]

    for msg in messages_text:
        await message.answer(msg, parse_mode="HTML")